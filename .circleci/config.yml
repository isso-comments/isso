version: 2.1

# https://circleci.com/docs/2.0/language-python/
# https://circleci.com/docs/2.0/language-javascript/
#
# TODO: Only trigger relevant jobs if files in directories changed
# https://stackoverflow.com/questions/44793903/circleci-how-to-run-job-when-has-change-in-specific-directory#44815405
# https://gist.github.com/naesheim/18d0c0a58ee61f4674353a2f4cf71475
#
# TODO: Maybe re-use tox as with travis?

general:
  branches:
    only:
     - master # list of branches to build
     - circleci
     - /feature-.*/ # or regexes

orbs:
  # https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.3.2
  # https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.1.0

workflows:
  default:
    jobs:
      - nosetests:
          matrix:
            parameters:
              #python-version: ["3.4", "3.5", "3.6", "3.7", "3.8", "3.9"]
              python-version: ["3.8"]
      - flakes:
          matrix:
            parameters:
              #python-version: ["3.4", "3.5", "3.6", "3.7", "3.8", "3.9"]
              python-version: ["3.8"]
      - css
      - docs:
          requires:
            - css # For site.css
          matrix:
            parameters:
              #python-version: ["3.4", "3.5", "3.6", "3.7", "3.8", "3.9"]
              python-version: ["3.8"]


jobs:
  nosetests:
    parameters:
      python_version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python_version >>
    steps:
      - checkout
      - restore_cache:
          key: pip-pkgs-v3-{{ .Branch }}-{{ checksum "isso/tests/requirements-test.txt" }}
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv ~/venv
            . ~/venv/bin/activate
            pip install -r isso/tests/requirements-test.txt
      - save_cache:
          key: pip-pkgs-v3-{{ .Branch }}-{{ checksum "isso/tests/requirements-test.txt" }}
          paths:
            - "~/venv"
      - run:
          name: Install isso in editable mode
          command: |
            . ~/venv/bin/activate
            pip install -e .
      - run:
          name: Run nosetests with coverage
          command: |
            . ~/venv/bin/activate
            nosetests --with-doctest --with-coverage --cover-package=isso isso/

  flakes:
    parameters:
      python_version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python_version >>
    steps:
      - checkout
      - restore_cache:
          key: pip-pkgs-v3-{{ .Branch }}-{{ checksum "isso/tests/requirements-test.txt" }}
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv ~/venv
            . ~/venv/bin/activate
            pip install -r isso/tests/requirements-test.txt
      - run:
          name: Run flake8
          # FIXME Allowed to fail until formatting is fixed
          command: |
            . ~/venv/bin/activate
            flake8 . --count --max-line-length=127 --show-source --statistics || /bin/true
      - save_cache:
          key: pip-pkgs-v3-{{ .Branch }}-{{ checksum "isso/tests/requirements-test.txt" }}
          paths:
            - "~/venv"

  css:
    executor: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
          # # Find the most recently generated cache used from any branch
          - node-v3-
          # Will fail since no package-lock.json exists at this step
          #- node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: npm install node-sass
      - run: ./node_modules/node-sass/bin/node-sass --no-cache docs/_static/css/site.scss docs/_static/css/site.css
      - save_cache:
          key: node-v3-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/project/node_modules
            - ~/.npm
      - persist_to_workspace:
          root: docs/_static/css/
          paths:
            - site.css

  docs:
    parameters:
      python_version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python_version >>
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run: cp /tmp/workspace/site.css docs/_static/css/site.css
      - restore_cache:
          key: pip-pkgs-v3-{{ .Branch }}-{{ checksum "isso/tests/requirements-test.txt" }}
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv ~/venv
            . ~/venv/bin/activate
            pip install -r isso/tests/requirements-test.txt
      - save_cache:
          key: pip-pkgs-v3-{{ .Branch }}-{{ checksum "isso/tests/requirements-test.txt" }}
          paths:
            - "~/venv"
      - run:
          # FIXME: Use `html` builder instead of `dirhtml` so that artifacts
          # are viewable on circleci without appending /index.html ???
          # Sadly sphinx emits a mix of .html and non-index links :-/
          name: Compile docs using sphinx
          command: |
            . ~/venv/bin/activate
            sphinx-build -b dirhtml docs/ docs/_build/html
      - store_artifacts:
          path: docs/_build/html
          destination: docs-html
